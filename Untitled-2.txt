// Sidebar.js
'use client'; // Mark as a Client Component
import { useState, useContext } from 'react';
import { MenuContext } from '../lib/MenuContext';
import { useRouter } from 'next/navigation';
import {
  FaSearch, FaCommentDots, FaBell, FaCog, FaUserCircle, FaHome, FaBox, FaList, FaStore, FaWallet, FaPlus, FaSignOutAlt,
  FaArrowRight, FaBars
} from 'react-icons/fa'; // Icons from react-icons
import { usePathname } from 'next/navigation';
import { MenuContext } from '../../lib/MenuContext';

export default function Sidebar() {
  const { menuItems } = useContext(MenuContext);
  const router = useRouter();
  const [isSidebarVisible, setSidebarVisible] = useState(true); // New state to control sidebar visibility

  const toggleSidebar = () => {
    setSidebarVisible((prevState) => !prevState); // Toggle sidebar visibility
  };

  return (
    <div>
      {/* Toggle Button */}
      <button
        style={styles.toggleButton}
        onClick={toggleSidebar}
      >
        <FaBars style={styles.menuIcon} />
      </button>

      {isSidebarVisible && (
        <div style={styles.sidebar}>
          <ul style={styles.sidebarList}>
            {menuItems
              .filter(item => item.menu_item !== 'Add Product' && item.menu_item !== 'Log out')  // Filter out 'Add Product' and 'Log out'
              .map((item) => {
                let IconComponent; // Initialize a variable to hold the correct icon component

                // Dynamically assign the correct icon based on the menu item
                switch (item.menu_item) {
                  case 'Home':
                    IconComponent = FaHome;
                    break;
                  case 'Products':
                    IconComponent = FaBox;
                    break;
                  case 'Categories':
                    IconComponent = FaList;
                    break;
                  case 'Stores':
                    IconComponent = FaStore;
                    break;
                  case 'Finances':
                    IconComponent = FaWallet;
                    break;
                  case 'Settings':
                    IconComponent = FaCog;
                    break;
                  default:
                    IconComponent = FaHome; // Default icon if none match
                }

                return (
                  <li style={styles.sidebarItem} onClick={() => router.push(item.link)} key={item.menu_item}>
                    <IconComponent style={styles.menuIcon} /> {item.menu_item}
                  </li>
                );
              })}
          </ul>

          <div style={styles.sidebarFooter}>
            {/* 'Add Product' button outside of the ul */}
            <button style={styles.textButton} onClick={() => router.push('/add-product')}>
              <FaPlus style={styles.menuIcon}/> Add product
            </button>
            
            {/* 'Log out' button outside of the ul */}
            <button style={styles.textButton} onClick={() => router.push('/login')}>
              <FaSignOutAlt style={styles.menuIcon}/> Log out
            </button>
          </div>
        </div>
      )}
    </div>
  );
}

const styles = {
  // Your existing styles...
  toggleButton: {
    position: 'absolute',
    top: '20px',
    left: '20px',
    background: 'transparent',
    border: 'none',
    color: '#fff',
    fontSize: '20px',
    cursor: 'pointer',
  },
  sidebar: {
    position: 'fixed',
    top: '80px',
    left: 0,
    width: '250px',
    height: 'calc(100vh - 80px)',
    backgroundColor: '#8253D7', // Purple sidebar
    padding: '24px',
    boxShadow: '2px 0 8px rgba(0, 0, 0, 0.1)',
    overflowY: 'auto',
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'space-between',
    borderRadius: '0 12px 12px 0', // Rounded corners on the right side
  },
  // The rest of your existing styles...
};


--------------------------------

// DashboardPage.js
'use client'; // Mark as a Client Component
import { useTranslation } from 'react-i18next';
import Sidebar from "../components/sidebar";
import Navbar from "../components/navbar";
import Header from "../components/header";

import { useDispatch, useSelector } from 'react-redux';
import React, { useContext } from 'react';
import { useRouter } from 'next/navigation';
import { Chart as ChartJS, ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';
import { Bar } from 'react-chartjs-2';
import { ThemeContext } from '../lib/ThemeContext';
import { useSharedStyles } from '../sharedStyles';
import {
  FaSearch, FaCommentDots, FaBell, FaCog, FaUserCircle, FaHome, FaBox, FaList, FaStore, FaWallet, FaPlus, FaSignOutAlt,
  FaArrowRight
} from 'react-icons/fa'; // Icons from react-icons
import { usePathname } from 'next/navigation';
import { MenuContext } from '../../lib/MenuContext';

ChartJS.register(ArcElement, Tooltip, Legend, BarElement, CategoryScale, LinearScale);

const DashboardPage = () => {
  const { theme, toggleTheme } = useContext(ThemeContext);
  const dispatch = useDispatch();
  const { isAuthenticated } = useSelector((state) => state.auth); // Get authentication state from Redux
  const router = useRouter();
  const styles = useSharedStyles();

  const handleLogout = () => {
    dispatch(logout());
    localStorage.removeItem('token');
    router.push('/login');
  };
  
  // Data for the bar chart
  const barChartData = {
    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
    datasets: [
      {
        label: 'Sales',
        data: [12, 19, 3, 5, 2, 3],
        backgroundColor: '#8253D7', // Purple bars
        borderRadius: 10, // Rounded corners
      },
    ],
  };

  return (
    <div style={styles.container}>
      {/* Header */}
      <Header />

      {/* Main Content */}
      <div style={styles.mainContent}>
        {/* Sidebar */}
        <Sidebar />

        {/* Scrollable Content */}
        <div style={{ ...styles.content, marginLeft: '250px' }}> {/* Adjusting for the sidebar */}
          {/* Top Section: 5 Cards with Scroll Arrow */}
          <div style={styles.topSection}>
            <div style={styles.cardScrollContainer}>
              {[...Array(5)].map((_, index) => (
                <div key={index} style={styles.card}>
                  <div style={styles.cardNumber}>123</div>
                  <div style={styles.cardUnit}>Units</div>
                  <div style={styles.cardTitle}>Card Title</div>
                </div>
              ))}
            </div>
            <div style={styles.scrollArrow}>
              <FaArrowRight style={styles.arrowIcon} />
            </div>
          </div>

          {/* Bottom Section */}
          <div style={styles.bottomSection}>
            {/* First Row */}
            <div style={styles.bottomRow}>
              {/* Bar Chart Card */}
              <div style={styles.bottomCard}>
                <h3 style={styles.bottomCardTitle}>Sales Overview</h3>
                <div style={styles.chartContainer}>
                  <Bar data={barChartData} options={{ responsive: true }} />
                </div>
              </div>
              {/* 3x2 Small Cards */}
              <div style={styles.bottomCard}>
                <h3 style={styles.bottomCardTitle}>Quick Stats</h3>
                <div style={styles.smallCardGrid}>
                  {[...Array(6)].map((_, index) => (
                    <div key={index} style={styles.smallCard}>
                      <FaBox style={styles.smallCardIcon} />
                      <div style={styles.smallCardText}>Stat {index + 1}</div>
                    </div>
                  ))}
                </div>
              </div>
            </div>

            {/* Second Row */}
            <div style={styles.bottomRow}>
              {/* Stock Number List */}
              <div style={styles.bottomCard}>
                <h3 style={styles.bottomCardTitle}>Stock Numbers</h3>
                <ul style={styles.stockList}>
                  <li>Low stock items: 12</li>
                  <li>Item categories: 6</li>
                  <li>Refunded items: 3</li>
                </ul>
              </div>
              {/* Store List */}
              <div style={styles.bottomCard}>
                <h3 style={styles.bottomCardTitle}>Store List</h3>
                <div style={styles.storeList}>
                  {[...Array(3)].map((_, index) => (
                    <div key={index} style={styles.storeItem}>
                      <div>Arusha</div>
                      <div>20 employees</div>
                      <div>100 items</div>
                      <div>2 orders</div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default DashboardPage;
